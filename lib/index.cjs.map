{"version":3,"sources":["../src/index.ts","../src/LinearBlur.tsx","../src/RadialBlur.tsx"],"sourcesContent":["export { LinearBlur } from \"./LinearBlur\";\nexport { RadialBlur } from \"./RadialBlur\";\n","import React from \"react\";\n\ninterface LinearBlurProps extends React.HTMLAttributes<HTMLDivElement> {\n  strength?: number;\n  tint?: string;\n  side?: \"top\" | \"bottom\" | \"left\" | \"right\";\n  topOffset?: number; // % до которого полный блюр, после чего переход к прозрачности\n}\n\nconst LinearBlur = ({\n  strength = 24,\n  tint = \"rgba(255,255,255,0.3)\",\n  side = \"bottom\",\n  topOffset = 30,\n  ...props\n}: LinearBlurProps) => {\n  // Создаем правильный градиент в зависимости от стороны\n  const getMaskGradient = () => {\n    switch (side) {\n      case \"top\":\n        return `linear-gradient(to bottom, black 0%, black ${topOffset}%, transparent 100%)`;\n      case \"bottom\":\n        // Для фиксированного элемента сверху:\n        // 1. Полный блюр от 0% до topOffset%\n        // 2. Переход к прозрачности от topOffset% до 100%\n        return `linear-gradient(to bottom, black 0%, black ${topOffset}%, transparent 100%)`;\n      case \"left\":\n        return `linear-gradient(to right, black 0%, black ${topOffset}%, transparent 100%)`;\n      case \"right\":\n        return `linear-gradient(to left, black 0%, black ${topOffset}%, transparent 100%)`;\n      default:\n        return `linear-gradient(to bottom, black 0%, black ${topOffset}%, transparent 100%)`;\n    }\n  };\n\n  const maskGradient = getMaskGradient();\n\n  return (\n    <div\n      {...props}\n      style={{\n        position: \"absolute\",\n        inset: 0,\n        zIndex: -1,\n        pointerEvents: \"none\",\n        WebkitBackdropFilter: `blur(${strength}px)`,\n        backdropFilter: `blur(${strength}px)`,\n        backgroundColor: tint,\n        WebkitMaskImage: maskGradient,\n        maskImage: maskGradient,\n        WebkitMaskRepeat: \"no-repeat\",\n        maskRepeat: \"no-repeat\",\n        WebkitMaskSize: \"100% 100%\",\n        maskSize: \"100% 100%\",\n        ...props.style,\n      }}\n    />\n  );\n};\n\nexport { LinearBlur };\n","import React from \"react\";\n\ninterface RadialBlurProps extends React.HTMLAttributes<HTMLDivElement> {\n  strength?: number;\n  steps?: number;\n  falloffPercentage?: number;\n  tint?: string;\n}\n\nfunction RadialBlur({\n  strength = 64,\n  steps = 8,\n  falloffPercentage = 100,\n  tint = \"transparent\",\n  ...props\n}: RadialBlurProps) {\n  const actualSteps = Math.max(1, steps);\n  const step = falloffPercentage / actualSteps;\n  const factor = 0.5;\n  const base = Math.pow(strength / factor, 1 / (actualSteps - 1));\n  const centerPercentage = 100 - falloffPercentage;\n\n  const getBackdropFilter = (i: number) =>\n    `blur(${factor * base ** (actualSteps - i - 1)}px)`;\n\n  return (\n    <div\n      {...props}\n      style={{\n        // This has to be set on the top level element to prevent pointer events\n        pointerEvents: \"none\",\n        ...props.style,\n      }}\n    >\n      <div\n        style={{\n          position: \"relative\",\n          zIndex: 0,\n          width: \"100%\",\n          height: \"100%\",\n          background: `radial-gradient(\n            closest-side,\n            rgb(from ${tint} r g b / alpha) 0%,\n            rgb(from ${tint} r g b / 0%) 100%\n          )`,\n        }}\n      >\n        {/* Center starts at 100-falloffPercentage% */}\n        <div\n          style={{\n            position: \"absolute\",\n            zIndex: 1,\n            inset: 0,\n            mask: `radial-gradient(\n                  closest-side,\n                  rgba(0, 0, 0, 1) ${centerPercentage}%,\n                  rgba(0, 0, 0, 0) ${centerPercentage + step}%\n                )`,\n            backdropFilter: getBackdropFilter(0),\n            WebkitBackdropFilter: getBackdropFilter(0),\n          }}\n        />\n        {actualSteps > 1 && (\n          <div\n            style={{\n              position: \"absolute\",\n              zIndex: 2,\n              inset: 0,\n              mask: `radial-gradient(\n                  closest-side,\n                  rgba(0, 0, 0, 1) ${centerPercentage}%,\n                  rgba(0, 0, 0, 1) ${centerPercentage + step}%,\n                  rgba(0, 0, 0, 0) ${centerPercentage + step * 2}%\n                )`,\n              backdropFilter: getBackdropFilter(1),\n              WebkitBackdropFilter: getBackdropFilter(1),\n            }}\n          />\n        )}\n        {actualSteps > 2 &&\n          Array.from({ length: actualSteps - 2 }).map((_, i) => (\n            <div\n              key={i}\n              style={{\n                position: \"absolute\",\n                zIndex: i + 2,\n                inset: 0,\n                mask: `radial-gradient(\n                    closest-side,\n                    rgba(0, 0, 0, 0) ${centerPercentage + i * step}%,\n                    rgba(0, 0, 0, 1) ${centerPercentage + (i + 1) * step}%,\n                    rgba(0, 0, 0, 1) ${centerPercentage + (i + 2) * step}%,\n                    rgba(0, 0, 0, 0) ${centerPercentage + (i + 3) * step}%\n                  )`,\n                backdropFilter: getBackdropFilter(i + 2),\n                WebkitBackdropFilter: getBackdropFilter(i + 2),\n              }}\n            />\n          ))}\n      </div>\n    </div>\n  );\n}\n\nexport { RadialBlur };\n"],"mappings":"yaAAA,IAAAA,EAAA,GAAAC,EAAAD,EAAA,gBAAAE,EAAA,eAAAC,IAAA,eAAAC,EAAAJ,GCsCI,IAAAK,EAAA,6BA7BEC,EAAa,CAAC,CAClB,SAAAC,EAAW,GACX,KAAAC,EAAO,wBACP,KAAAC,EAAO,SACP,UAAAC,EAAY,GACZ,GAAGC,CACL,IAAuB,CAoBrB,IAAMC,GAlBkB,IAAM,CAC5B,OAAQH,EAAM,CACZ,IAAK,MACH,MAAO,8CAA8CC,CAAS,uBAChE,IAAK,SAIH,MAAO,8CAA8CA,CAAS,uBAChE,IAAK,OACH,MAAO,6CAA6CA,CAAS,uBAC/D,IAAK,QACH,MAAO,4CAA4CA,CAAS,uBAC9D,QACE,MAAO,8CAA8CA,CAAS,sBAClE,CACF,GAEqC,EAErC,SACE,OAAC,OACE,GAAGC,EACJ,MAAO,CACL,SAAU,WACV,MAAO,EACP,OAAQ,GACR,cAAe,OACf,qBAAsB,QAAQJ,CAAQ,MACtC,eAAgB,QAAQA,CAAQ,MAChC,gBAAiBC,EACjB,gBAAiBI,EACjB,UAAWA,EACX,iBAAkB,YAClB,WAAY,YACZ,eAAgB,YAChB,SAAU,YACV,GAAGD,EAAM,KACX,EACF,CAEJ,ECxBM,IAAAE,EAAA,6BAzBN,SAASC,EAAW,CAClB,SAAAC,EAAW,GACX,MAAAC,EAAQ,EACR,kBAAAC,EAAoB,IACpB,KAAAC,EAAO,cACP,GAAGC,CACL,EAAoB,CAClB,IAAMC,EAAc,KAAK,IAAI,EAAGJ,CAAK,EAC/BK,EAAOJ,EAAoBG,EAC3BE,EAAS,GACTC,EAAO,KAAK,IAAIR,EAAWO,EAAQ,GAAKF,EAAc,EAAE,EACxDI,EAAmB,IAAMP,EAEzBQ,EAAqBC,GACzB,QAAQJ,EAASC,IAASH,EAAcM,EAAI,EAAE,MAEhD,SACE,OAAC,OACE,GAAGP,EACJ,MAAO,CAEL,cAAe,OACf,GAAGA,EAAM,KACX,EAEA,oBAAC,OACC,MAAO,CACL,SAAU,WACV,OAAQ,EACR,MAAO,OACP,OAAQ,OACR,WAAY;AAAA;AAAA,uBAECD,CAAI;AAAA,uBACJA,CAAI;AAAA,YAEnB,EAGA,oBAAC,OACC,MAAO,CACL,SAAU,WACV,OAAQ,EACR,MAAO,EACP,KAAM;AAAA;AAAA,qCAEmBM,CAAgB;AAAA,qCAChBA,EAAmBH,CAAI;AAAA,mBAEhD,eAAgBI,EAAkB,CAAC,EACnC,qBAAsBA,EAAkB,CAAC,CAC3C,EACF,EACCL,EAAc,MACb,OAAC,OACC,MAAO,CACL,SAAU,WACV,OAAQ,EACR,MAAO,EACP,KAAM;AAAA;AAAA,qCAEiBI,CAAgB;AAAA,qCAChBA,EAAmBH,CAAI;AAAA,qCACvBG,EAAmBH,EAAO,CAAC;AAAA,mBAElD,eAAgBI,EAAkB,CAAC,EACnC,qBAAsBA,EAAkB,CAAC,CAC3C,EACF,EAEDL,EAAc,GACb,MAAM,KAAK,CAAE,OAAQA,EAAc,CAAE,CAAC,EAAE,IAAI,CAACO,EAAGD,OAC9C,OAAC,OAEC,MAAO,CACL,SAAU,WACV,OAAQA,EAAI,EACZ,MAAO,EACP,KAAM;AAAA;AAAA,uCAEiBF,EAAmBE,EAAIL,CAAI;AAAA,uCAC3BG,GAAoBE,EAAI,GAAKL,CAAI;AAAA,uCACjCG,GAAoBE,EAAI,GAAKL,CAAI;AAAA,uCACjCG,GAAoBE,EAAI,GAAKL,CAAI;AAAA,qBAExD,eAAgBI,EAAkBC,EAAI,CAAC,EACvC,qBAAsBD,EAAkBC,EAAI,CAAC,CAC/C,GAdKA,CAeP,CACD,GACL,EACF,CAEJ","names":["index_exports","__export","LinearBlur","RadialBlur","__toCommonJS","import_jsx_runtime","LinearBlur","strength","tint","side","topOffset","props","maskGradient","import_jsx_runtime","RadialBlur","strength","steps","falloffPercentage","tint","props","actualSteps","step","factor","base","centerPercentage","getBackdropFilter","i","_"]}